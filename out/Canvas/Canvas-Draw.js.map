{"version":3,"sources":["../src/Canvas/Canvas-Draw.ts"],"names":[],"mappings":"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","file":"Canvas-Draw.js","sourcesContent":["/**\r\n * All Canvas Drawing Methods and Variables\r\n */\r\n\r\n// Module Imports\r\nimport { ctx } from './Core';\r\nimport { nodeTree } from '../Core/Preload';\r\nimport { WIDTH, HEIGHT, GARBAGE } from '../Core/Constants';\r\nimport { within, createVector, createCenterVector } from '../Utilities/Vectors';\r\nimport { addBtn } from '../Utilities/Buttons';\r\nimport { mouse } from '../Events/Mouse';\r\n\r\n\r\n\r\n /** Clears the entire Canvas */\r\nexport function clearCanvas(): void {\r\n    ctx.clearRect(0, 0, WIDTH, HEIGHT);\r\n}\r\n\r\n/** Displays Add Button onto the Canvas\r\n * Opacity changes based on mouse to btn\r\n */\r\nexport function showAddButton(): void {\r\n    // Check if mouse within btn\r\n    addBtn.active = within(mouse.pos, {width:0, height:0} , addBtn.pos, {width: addBtn.radius*2, height: addBtn.radius*2});\r\n\r\n    // Opacity Setup\r\n    let opacity;\r\n    addBtn.active ? opacity = 1 : opacity = 0.4;\r\n    \r\n    // Button Properties\r\n    let pallet = {\r\n        c1: `rgba(0, 88, 94, ${opacity})`,\r\n        c2: `rgba(0, 148, 148, ${opacity})`,\r\n        c3: `rgba(245, 242, 220, ${opacity}`\r\n    };\r\n    \r\n    let PLUS_WIDTH = 2;\r\n    let PLUS_HEIGHT = 15;\r\n\r\n\r\n    // Background Button\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = pallet.c2;\r\n    ctx.fillStyle = pallet.c1;\r\n    ctx.arc(addBtn.pos.x, addBtn.pos.y, addBtn.radius, 0, Math.PI * 2);\r\n    ctx.stroke();\r\n    ctx.fill();\r\n    ctx.beginPath();\r\n\r\n    // Plus Button\r\n    ctx.beginPath();\r\n    ctx.fillStyle = pallet.c3;\r\n    ctx.fillRect(addBtn.pos.x - (PLUS_WIDTH / 2), addBtn.pos.y - (PLUS_HEIGHT / 2), PLUS_WIDTH, PLUS_HEIGHT);\r\n    ctx.fill();\r\n    ctx.beginPath();\r\n\r\n    ctx.beginPath();\r\n    ctx.fillStyle = pallet.c3;\r\n    ctx.fillRect(addBtn.pos.x - (PLUS_HEIGHT / 2), addBtn.pos.y - (PLUS_WIDTH / 2), PLUS_HEIGHT, PLUS_WIDTH);\r\n    ctx.fill();\r\n    ctx.beginPath();\r\n}\r\n\r\n/** Displays the Garbage for deleting a Node \r\n * Returns a Boolean for the state of hitbox to node\r\n */\r\nexport function showGarbage(): Boolean {\r\n    let img = GARBAGE.close;\r\n\r\n    // Variables\r\n    let offsetY = 10;\r\n    let offsetX = 7;\r\n    let x = img.width;\r\n    let y = HEIGHT - (img.height + offsetY);\r\n    let opacity = 0.6;  // Opacity of Diming Overlay\r\n    \r\n    \r\n    // Create the Hitbox & Active Member\r\n    let hitbox = createCenterVector(createVector(x, y), img);\r\n    let member = nodeTree.activeMember().member;\r\n    let hit = within(member.getPosition(), member.getSize(), hitbox, img)\r\n\r\n    // Check if Active Node is within the hitbox\r\n    if(member && hit){\r\n        opacity = 1; // Highlight the Garbage\r\n\r\n        // Initiate Garbage Open Asset\r\n        img = GARBAGE.open;\r\n        x = img.width - offsetX;\r\n        y = HEIGHT - (img.height + offsetY);\r\n        hitbox = createCenterVector(createVector(x, y), img);\r\n    }\r\n\r\n    // Draw Garbage Open Asset\r\n    ctx.save();\r\n    ctx.globalAlpha = opacity;\r\n    ctx.drawImage(img, x, y);\r\n    ctx.restore();\r\n\r\n    // Return if the Garbage and a Node hit\r\n    return hit;\r\n}"]}