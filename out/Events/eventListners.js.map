{"version":3,"sources":["../src/Events/eventListners.ts"],"names":[],"mappings":";;AAAA,qBAAqB;AACrB,6CAA2C;AAC3C,yCAAwC;AACxC,0CAAkD;AAClD,mCAAgC;AAGhC,wBAAwB;AACxB,gBAAgB,CAAC,WAAW,EAAE,KAAK,CAAC,EAAE;IAClC,aAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC;IAC5B,aAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC;AAChC,CAAC,CAAC,CAAC;AAEH,gBAAgB,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE;IAC7B,IAAI,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,GAAG,EAAE;QAC5B,kBAAQ,CAAC,KAAK,EAAE,CAAC;KACpB;SAAM,IAAI,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,GAAG,EAAE;QACnC,QAAQ;QACR,wBAAgB,EAAE,CAAC;KACtB;AACL,CAAC,CAAC,CAAC;AAEH,wBAAwB;AACxB,aAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE;IACrC,aAAK,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;IACxB,aAAK,CAAC,MAAM,GAAG,IAAI,CAAC;AACxB,CAAC,CAAC,CAAC;AAEH,aAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE;IACrC,aAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;IAEtB,kDAAkD;IAClD,kBAAQ,CAAC,aAAa,CAAC,aAAK,CAAC,GAAG,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AAEH,aAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE;IACnC,8EAA8E;IAC9E,IAAG,aAAK,CAAC,QAAQ,IAAI,IAAI,IAAI,aAAK,CAAC,QAAQ,IAAI,KAAK,EAAC;QACjD,aAAK,CAAC,WAAW,GAAG,IAAI,CAAC;KAC5B;IAED,qBAAqB;IACrB,aAAK,CAAC,MAAM,GAAG,KAAK,CAAC;IACrB,aAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC","file":"eventListners.js","sourcesContent":["// Imported Variables\r\nimport { nodeTree } from '../Core/Preload';\r\nimport { canvas } from '../Canvas/Core';\r\nimport { triggerDebugMode } from '../Debug/debug';\r\nimport { mouse } from './Mouse';\r\n\r\n\r\n// Global Event Listners\r\naddEventListener(\"mousemove\", event => {\r\n    mouse.pos.x = event.clientX;\r\n    mouse.pos.y = event.clientY;\r\n});\r\n\r\naddEventListener(\"keypress\", e => {\r\n    if (e.key.toLowerCase() == 'r') {\r\n        nodeTree.reset();\r\n    } else if (e.key.toLowerCase() == 'd') {\r\n        // DEBUG\r\n        triggerDebugMode();\r\n    }\r\n});\r\n\r\n// Canvas Event Listners\r\ncanvas.addEventListener(\"mousedown\", e => {\r\n    mouse.button = e.button;\r\n    mouse.isDown = true;\r\n});\r\n\r\ncanvas.addEventListener(\"mousemove\", e =>{\r\n    mouse.isMoving = true;\r\n\r\n    // Check and Set active to Node that mouse is over\r\n    nodeTree.setActiveNode(mouse.pos);\r\n});\r\n\r\ncanvas.addEventListener(\"mouseup\", e => {\r\n    // console.log(e.button); // HERE THE RIGHT CLICK EVENTS WILL GO (Button == 2)\r\n    if(mouse.timeDown <= 0.05 && mouse.isMoving == false){\r\n        mouse.singleClick = true;\r\n    }\r\n\r\n    // Keep Track of Data\r\n    mouse.isDown = false;\r\n    mouse.timeDown = 0;\r\n});"]}