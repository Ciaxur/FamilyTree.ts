{"version":3,"sources":["../src/Utilities/Vectors.ts"],"names":[],"mappings":"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","file":"Vectors.js","sourcesContent":["/* \r\n * Title: Vector Class\r\n * Can Create 2D Vectors using methods.\r\n * Calculations from two Vectors\r\n *  - Adding | Subtracting | Mutliplying | Dividing | Distance\r\n * Since Vector2D is an Object, a method is available to create a Deep Copy\r\n*/\r\n\r\n// Interface Imports\r\nimport { Size2D } from './interfaces';\r\n\r\n/** Vector Class Object\r\n * A two Dimentional Vector Object with two Elements (x, y)\r\n * Calculations from two Vectors\r\n * Vector Methods for Manipulation\r\n*/\r\nexport class Vector2D {\r\n    public x: number;\r\n    public y: number;\r\n    \r\n    /** Create a 2D Vector with Parameters\r\n     * @constructor Create a 2D Vector\r\n     * @param x Vector X Point (Optional)\r\n     * @param y Vector Y Point (Optional)\r\n     */\r\n    constructor(x?, y?) {\r\n        x ? this.x = x : this.x = undefined;    // Assign x if there is one\r\n        y ? this.y = y : this.y = undefined;    // Assign y if there is one\r\n    };\r\n\r\n    /** Adds Vector2 to current vector */\r\n    public add(vec2: Vector2D): void {\r\n        this.x += vec2.x;\r\n        this.y += vec2.y;\r\n    }\r\n\r\n    /** Subtracts Vector2 from current vector */\r\n    public sub(vec2: Vector2D): void {\r\n        this.x -= vec2.x;\r\n        this.y -= vec2.y;\r\n    }\r\n\r\n    /** Multiplies Vector2 from current vector */\r\n    public mult(vec2: Vector2D): void {\r\n        this.x *= vec2.x;\r\n        this.y *= vec2.y;\r\n    }\r\n\r\n    /** Divides Vector2 from current vector */\r\n    public div(vec2: Vector2D): void {\r\n        this.x /= vec2.x;\r\n        this.y /= vec2.y;\r\n    }\r\n\r\n    /** Returns a Deep Copy of current Vector Object */\r\n    public copy(): Vector2D {\r\n        return new Vector2D(this.x, this.y);\r\n    }\r\n};\r\n\r\n\r\n/** Creates and returns a 2D Vector Object \r\n * @param x Vector X Point (Optional)\r\n * @param y Vector y Point (Optional)\r\n*/\r\nexport function createVector(x?: number, y?: number){\r\n    return new Vector2D(x, y);\r\n}\r\n\r\n/** Creates a Vector2D from the Center of parameter position.\r\n * Centralizes the given position\r\n * @param pos -Position Vector of Object\r\n * @param size -Size Vector of Object\r\n*/\r\nexport function createCenterVector(pos: Vector2D, size: Size2D): Vector2D {\r\n    return createVector(pos.x + (size.width / 2), pos.y + (size.height / 2));\r\n}\r\n\r\n/** Calculates the Distance between two 2D Vector Points\r\n * @param x1 -First x Vector Point\r\n * @param y1 -First y Vector Point\r\n * @param x2 -Second x Vector Point\r\n * @param y2 -Second y Vector Point\r\n */\r\nexport function dist(x1:number, y1:number, x2:number, y2:number): number {\r\n    return Math.sqrt(Math.pow((x1 - x2), 2) + Math.pow((y1 - y2), 2));\r\n}\r\n\r\n/** Calculates if Vector1 is within Vector2 from the Center of Vector\r\n * @param vec1 - Primary Vector (Location)\r\n * @param size1 - Primary Size (Offset)\r\n * @param vec2 - Secondary Vector (Location)\r\n * @param size2 - Secondary Size (Offset)\r\n * @returns A Boolean on the state of the two vectors overlaying\r\n */\r\nexport function within(vec1: Vector2D, size1: Size2D, vec2: Vector2D, size2: Size2D): Boolean {\r\n    if ((vec1.x - size1.width / 2)  < (vec2.x + (size2.width / 2))  &&\r\n        (vec1.x + size1.width / 2)  > (vec2.x - (size2.width / 2))  &&\r\n        (vec1.y - size1.height / 2) < (vec2.y + (size2.height / 2)) &&\r\n        (vec1.y + size1.height / 2) > (vec2.y - (size2.height / 2))) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}"]}