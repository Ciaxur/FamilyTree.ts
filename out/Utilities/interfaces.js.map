{"version":3,"sources":["../src/Utilities/interfaces.ts"],"names":[],"mappings":";;AAcC,CAAC;AAMD,CAAC;AAUD,CAAC;AAeD,CAAC;AAeD,CAAC;AASD,CAAC","file":"interfaces.js","sourcesContent":["import { NodeMember } from '../TreeNodes/Node';\r\nimport { Vector2D } from './Vectors';\r\n\r\n/** Button Properites Interface \r\n * X,Y Position\r\n * Position Offsets\r\n * Size as Radius\r\n * Active State\r\n*/\r\nexport interface Button {\r\n    pos: Vector2D,\r\n    radius: number,\r\n    offset: number,\r\n    active: Boolean\r\n};\r\n\r\n/** A two Dimentional Vector Object for Sizing with two Elements (width, height) */ \r\nexport interface Size2D {\r\n    width: number,\r\n    height: number\r\n};\r\n\r\n/** Node Relation with another Node and Data */ \r\nexport interface NodeRelation {\r\n    attatchAtDist: number,  // Distance to validate attatchment\r\n    children: NodeMember[], // Attatched Children Nodes\r\n    parents: NodeMember[],  // Parent Nodes\r\n    isParent: Boolean,      // State of Parent\r\n    partners: NodeMember[], // Partners of Node\r\n    highlightNodes: Boolean // State of Node Relation Highlights\r\n};\r\n\r\n/** Node Linker Data \r\n * x        -> X Location\r\n * y        -> Y Location\r\n * radius   -> Linker's Radius\r\n * type     -> \"partner\" , \"child\"\r\n*/\r\nexport interface Linker {\r\n    pos: Vector2D,\r\n    radius: number,\r\n    type: string,\r\n    fill: string,\r\n    opacity: number,\r\n    stroke: string\r\n};\r\n\r\n/** Active Node Interface\r\n * Data for the Active node\r\n * member -> NodeMember Reference currently Active\r\n * index -> Index location in array for the member\r\n * linker -> Current active Linker\r\n * startingPos -> mouse's starting position to calculate the change in mouse position\r\n *      in order to move the node by it.\r\n*/\r\nexport interface ActiveNode {\r\n    member: NodeMember,\r\n    index: number,\r\n    linker: Linker,\r\n    startingPos: Vector2D\r\n};\r\n\r\n/** Assets Interface (Image HTML Elements)\r\n * Requires the Image Assets of all Nodes\r\n * core -> Core Member Image\r\n * contextMenu -> Menu Image\r\n*/\r\nexport interface Assets {\r\n    core: HTMLImageElement\r\n};"]}